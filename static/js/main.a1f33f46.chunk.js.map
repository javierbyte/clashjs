{"version":3,"sources":["lib/utils.js","lib/string-tools.js","Players.js","players/manuelmhtr.js","players/ericku.js","players/siegfried.js","players/horror.js","players/elperron.js","players/yuno.js","players/xmontoya.js","players/margeux.js","components/Tiles.js","components/Ammos.js","components/PlayersRender.js","components/Stats.js","components/Shoots.js","components/Notifications.js","clashjs/PlayerClass.js","clashjs/executeMovementHelper.js","clashjs/ClashCore.js","components/ClashRender.js","App.js","serviceWorker.js","index.js"],"names":["DIRECTIONS","movements","isVisible","originalPosition","finalPosition","direction","module","exports","randomMove","Math","random","floor","length","getDirection","start","end","diffVertical","abs","diffHorizontal","canKill","currentPlayerState","enemiesStates","some","enemyObject","isAlive","position","safeRandomMove","fastGetDirection","turn","currentPosition","howMuchTurn","currentPositionIndex","indexOf","getDistance","base64Chars","base62Chars","base32Chars","generateBaseString","digits","lowercase","uppercase","toUpperCase","special","join","pool","i","output","ceil","generateBase64String","generateBase62String","generateBase32String","generateBase10String","manuelmhtr","require","ericku","siegfried","horror","elperron","yuno","xmontoya","margeux","utils","ORIENTATION","north","east","south","west","info","name","style","ai","playerState","gameEnvironment","enemies","params","vulnerabilityLevel","nearestAmmo","nearestEnemy","canMove","calculateVulnerabilityLevel","targetPosition","forEach","enemy","ammo","max","isAligned","nearestAmmoDistance","northEast","southWest","aligned","calculateEnemyDistance","min","getSafestDirection","safestDirection","lowestVulnerability","maxDistanceLeft","option","vulnerability","distanceLeft","gridSize","calculateDistanceLeft","isBetterOption","moveSafely","huntEnemy","attackDirection","isEnemyAligned","enemyOrientation","getAttackDirection","enemyDistance","destination","getAmmo","ammoPosition","goToDirection","nearestDistance","distance","calculateDistanceToNearestAmmo","push","getNearestAmmo","instance","getNearestEnemy","attacker","canRun","defend","shouldMoveForAmmo","player","map","closest","playerPos","closestAmmo","pos","getClosestAmmo","isMovementSafe","action","futureState","JSON","parse","stringify","filter","result","canDie","getSafestMove","isSafeHere","isSafeToMove","turnToKill","chaseEnemy","closestEnemy","clonedStates","slice","getClosestEnemy","mockState","ericku_","type","hue","turnMove","hunter","ammoMove","gatherer","directionToAmmo","MUSOLINI","currentDirection","oldBestAmo","directions","1","2","3","4","turnsComplete","ElPerron","directionToTarget","toPosition","myPosition","distanceMin","ammoMin","amIndex","distanceByMe","getBestAmmo","getShortestDirection","endArray","reducedArray","reduce","reduced","Yuno","directionToPlayer","positionArray","el","resultPositions","currentEnemyPosition","noAmmo","directionToEnemy","Tiles","this","props","tileSize","tileRender","height","width","className","React","Component","Ammos","ammoRender","_","ammoPos","ammoIndex","top","left","zIndex","PlayersRender","playerStates","playerInstances","speed","playerDirections","directionAngle","playerRender","playerData","playerIndex","playerUUID","id","playerInfo","find","transition","opacity","transform","backgroundImage","isPlainObject","textDecoration","Array","fill","Stats","useState","expand","setExpand","isToggable","window","innerHeight","isExpanded","gameStats","rounds","total","orderedStats","Object","keys","playerId","sort","a","b","score","onClick","textAlign","padding","color","alt","playerStats","index","role","aria-label","kills","wins","Shoots","shoots","shootsRender","origin","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","Notification","rendered","setRendered","hide","text","Notifications","Date","getTime","dateTime","setDateTime","filteredKeys","notifications","expire","date","MAX_NOTIF","notificationData","notificationIdx","hideByLength","showByTime","PlayerClass","options","generateId","enemyState","e","console","error","safeMovement","value","size","clashCoreUtils","data","playerAction","evtCallback","coreCallback","directionDifference","splice","survivors","shooter","enemyIndex","killer","killed","winner","MAP_SIZE","innerWidth","ClashEmitter","EventEmitter","STATE","running","currentPlayer","suddenDeathCount","totalRounds","playerDefinition","ClashJS","playerDefinitionArray","emit","payload","handleExecuteMovementCallback","event","handleCoreAction","stats","alivePlayerCount","deaths","kdr","createAmmo","newAmmoPosition","newGame","shuffle","cloneDeep","playerInstance","getAlivePlayerCount","getState","derivedStats","playerKey","nextPly","SUDDEN_DEATH_PLY","otherPlayers","currentEnemyFilter","execute","executeMovementHelper","addListener","playerObjects","DEBUG","document","location","search","includes","DEFAULT_SPEED","MAX_SPEED","ClashInstance","Clash","state","clashState","finished","handleKill","get","pushNotification","endGame","setState","time","nextTurn","parseInt","setTimeout","sortBy","Infinity","fontWeight","border","fontSize","borderRadius","reload","Boolean","hostname","match","ReactDOM","render","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1f33f46.chunk.js","sourcesContent":["var DIRECTIONS = ['north', 'east', 'south', 'west'];\nvar movements = ['north', 'east', 'south', 'west', 'shoot'];\n\nvar randomMove = () => {\n  return Math.random() > 0.33 ? 'move' : movements[Math.floor(Math.random() * movements.length)];\n};\n\nvar safeRandomMove = () => {\n  return Math.random() > 0.33 ? 'move' : DIRECTIONS[Math.floor(Math.random() * DIRECTIONS.length)];\n};\n\nvar turn = (currentPosition = [], howMuchTurn) => {\n  var currentPositionIndex = DIRECTIONS.indexOf(currentPosition);\n  return DIRECTIONS[(currentPositionIndex + howMuchTurn) % 4];\n};\n\nvar getDirection = (start = [], end = []) => {\n  start = start || [];\n  end = end || [];\n\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical > diffHorizontal) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar getDistance = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  return diffHorizontal + diffVertical;\n};\n\nvar fastGetDirection = (start = [], end = []) => {\n  var diffVertical = Math.abs(start[0] - end[0]);\n  // var diffHorizontal = Math.abs(start[1] - end[1]);\n\n  if (diffVertical) {\n    return start[0] - end[0] > 0 ? 'north' : 'south';\n  }\n  return start[1] - end[1] > 0 ? 'west' : 'east';\n};\n\nvar isVisible = (originalPosition = [], finalPosition = [], direction = []) => {\n  switch (direction) {\n    case DIRECTIONS[0]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n    case DIRECTIONS[1]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n    case DIRECTIONS[2]:\n      return originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n    case DIRECTIONS[3]:\n      return originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n    default:\n      break;\n  }\n};\n\nvar canKill = (currentPlayerState = {}, enemiesStates = []) => {\n  return enemiesStates.some(enemyObject => {\n    return enemyObject.isAlive &&\n      isVisible(currentPlayerState.position, enemyObject.position, currentPlayerState.direction);\n  });\n};\n\nmodule.exports = {\n  randomMove,\n  getDirection,\n  isVisible,\n  canKill,\n  safeRandomMove,\n  fastGetDirection,\n  turn,\n  getDistance\n};\n","var digits = '0123456789';\nvar lowercase = 'abcdefghijklmnoprstuvxuyz';\nvar uppercase = lowercase.toUpperCase();\nvar special = '+/';\nvar base64Chars;\nvar base62Chars;\nvar base32Chars;\nvar generateBaseString;\n\nmodule.exports = (exports = {});\n\nbase64Chars = function() {\n  return [digits, lowercase, uppercase, special].join('');\n};\n\nbase62Chars = function() {\n  return [digits, lowercase, uppercase].join('');\n};\n\nbase32Chars = function() {\n  return [uppercase, digits].join('');\n};\n\ngenerateBaseString = function(pool, length) {\n  var output = '';\n  var i;\n\n  for (i = 0; i < length; i += 1) {\n    output += pool[Math.ceil(Math.random() * 100 % pool.length || 1) - 1];\n  }\n\n  return output;\n};\n\nexports.generateBase64String = function(length) {\n  return generateBaseString(base64Chars(), length);\n};\n\nexports.generateBase62String = function(length) {\n  return generateBaseString(base62Chars(), length);\n};\n\nexports.generateBase32String = function(length) {\n  return generateBaseString(base32Chars(), length);\n};\n\nexports.generateBase10String = function(length) {\n  return generateBaseString(digits, length);\n};\n","module.exports = {\n  // codingpains: require('./players/codingpains.js'),\n  manuelmhtr: require('./players/manuelmhtr.js'),\n  ericku: require('./players/ericku.js'),\n  siegfried: require('./players/siegfried.js'),\n  horror: require('./players/horror.js'),\n  elperron: require('./players/elperron.js'),\n  yuno: require('./players/yuno.js'),\n  xmontoya: require('./players/xmontoya.js'),\n  margeux: require('./players/margeux.js')\n};\n","var utils = require('../lib/utils.js');\nvar ORIENTATION = {north: 'vertical', east: 'horizontal', south: 'vertical', west: 'horizontal'};\n\nvar manuelmhtr = {\n  info: {\n    name: 'Manuelmhtr',\n    style: 3\n  },\n  ai: function(playerState, enemiesStates, gameEnvironment) {\n    var response;\n    var enemies = [];\n    var params = {\n      vulnerabilityLevel: null,\n      canKill: null,\n      nearestAmmo: null,\n      nearestEnemy: null,\n      canMove: null\n    };\n\n    // Parse enemies\n    enemiesStates.forEach(function(enemy) {\n      if (enemy.isAlive === true) {\n        enemy.nearestAmmoDistance = calculateDistanceToNearestAmmo(enemy.position);\n        enemies.push(enemy);\n      }\n    });\n\n    // Process parameters\n    params.vulnerabilityLevel = calculateVulnerabilityLevel(playerState.position);\n    params.canKill = playerState.ammo > 0 && utils.canKill(playerState, enemiesStates);\n    params.nearestAmmo = getNearestAmmo(playerState.position);\n    params.nearestEnemy = getNearestEnemy(playerState.position);\n    params.canMove = canMove(playerState.position, playerState.direction);\n\n    function calculateVulnerabilityLevel(targetPosition) {\n      var vulnerabilityLevel = 0.0;\n      enemies.forEach(function(enemy) {\n        if (utils.isVisible(enemy.position, targetPosition, enemy.direction) && enemy.ammo > 0) {\n          vulnerabilityLevel = Math.max(vulnerabilityLevel, 1.0);\n        } else if (isAligned(enemy.position, targetPosition) && (enemy.ammo > 0 || enemy.nearestAmmoDistance === 1)) {\n          vulnerabilityLevel = Math.max(vulnerabilityLevel, 0.5);\n        }\n      });\n\n      if (vulnerabilityLevel === 0.0) {\n        // Check if other enemies are near\n        var northEast = [targetPosition[0] + 1, targetPosition[1] + 1];\n        var southWest = [targetPosition[0] - 1, targetPosition[1] - 1];\n        enemies.forEach(function(enemy) {\n          if (enemy.ammo > 0) {\n            if (isAligned(enemy.position, northEast) || isAligned(enemy.position, southWest)) {\n              vulnerabilityLevel = Math.max(vulnerabilityLevel, 0.25);\n            }\n          }\n        });\n      }\n\n      return vulnerabilityLevel;\n    }\n\n    function isAligned(originalPosition, finalPosition) {\n      var aligned = false;\n      aligned = aligned || originalPosition[1] === finalPosition[1] && originalPosition[0] > finalPosition[0];\n      aligned = aligned || originalPosition[0] === finalPosition[0] && originalPosition[1] < finalPosition[1];\n      aligned = aligned || originalPosition[1] === finalPosition[1] && originalPosition[0] < finalPosition[0];\n      aligned = aligned || originalPosition[0] === finalPosition[0] && originalPosition[1] > finalPosition[1];\n      return aligned;\n    }\n\n    function getNearestAmmo(position) {\n      var nearestAmmo = null;\n      var nearestDistance = null;\n      gameEnvironment.ammoPosition.forEach(function(ammo) {\n        var distance = utils.getDistance(position, ammo);\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestAmmo = {\n            position: ammo,\n            distance: nearestDistance\n          };\n        }\n      });\n      return nearestAmmo;\n    }\n\n    function calculateDistanceToNearestAmmo(position) {\n      var nearestDistance = null;\n      gameEnvironment.ammoPosition.forEach(function(ammo) {\n        var distance = utils.getDistance(position, ammo);\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n        }\n      });\n      return nearestDistance;\n    }\n\n    function getNearestEnemy(position) {\n      var nearestEnemy = null;\n      var nearestDistance = null;\n      enemies.forEach(function(enemy) {\n        var distance = calculateEnemyDistance(position, enemy);\n\n        if (nearestDistance === null || distance < nearestDistance) {\n          nearestDistance = distance;\n          nearestEnemy = {\n            instance: enemy,\n            distance: nearestDistance\n          };\n        }\n      });\n      return nearestEnemy;\n    }\n\n    function calculateEnemyDistance(position, enemy) {\n      var diffVertical = Math.abs(position[0] - enemy.position[0]);\n      var diffHorizontal = Math.abs(position[1] - enemy.position[1]);\n      return Math.min(diffHorizontal, diffVertical);\n    }\n\n    function defend() {\n      if (params.vulnerabilityLevel === 1.0) {\n        var canRun = params.canMove;\n        var attacker;\n\n        // Find attacker\n        enemies.forEach(function(enemy) {\n          if (enemy.ammo > 0 && utils.isVisible(enemy.position, playerState.position, enemy.direction)) {\n            attacker = enemy;\n          }\n        });\n\n        // Check if can run\n        if (attacker && ORIENTATION[attacker.direction] === ORIENTATION[playerState.direction]) {\n          canRun = false;\n        }\n\n        if (canRun) {\n          return 'move';\n        } else if (attacker && playerState.ammo > 0) {\n          // Counterattack\n          return huntEnemy(attacker);\n        } else {\n          return getSafestDirection();\n        }\n      } else {\n        return getSafestDirection();\n      }\n    }\n\n    function getSafestDirection() {\n      var safestDirection = playerState.direction;\n      var lowestVulnerability = params.vulnerabilityLevel;\n      var maxDistanceLeft = 0;\n\n      var options = [{\n          direction: 'north',\n          position: [playerState.position[0] - 1, playerState.position[1]]\n        }, {\n          direction: 'east',\n          position: [playerState.position[0], playerState.position[1] + 1]\n        }, {\n          direction: 'south',\n          position: [playerState.position[0] + 1, playerState.position[1]]\n        }, {\n          direction: 'west',\n          position: [playerState.position[0], playerState.position[1] - 1]\n        }\n      ];\n\n      // Process options\n      options.forEach(function(option) {\n        option.vulnerability = calculateVulnerabilityLevel(option.position);\n        option.distanceLeft = calculateDistanceLeft(option.direction);\n        option.canMove = canMove(playerState.position, option.direction);\n        var isBetterOption = option.vulnerability < lowestVulnerability || (option.vulnerability === lowestVulnerability && option.distanceLeft > maxDistanceLeft);\n        if (option.canMove && isBetterOption) {\n          safestDirection = option.direction;\n          lowestVulnerability = option.vulnerability;\n          maxDistanceLeft = option.distanceLeft;\n        }\n      });\n\n      if (safestDirection === playerState.direction) {\n        return moveSafely();\n      } else {\n        return safestDirection;\n      }\n\n      function calculateDistanceLeft(direction) {\n        if (direction === 'north') {\n          return playerState.position[0];\n        } else if (direction === 'east') {\n          return gameEnvironment.gridSize - playerState.position[1];\n        } else if (direction === 'south') {\n          return gameEnvironment.gridSize - playerState.position[0];\n        } else if (direction === 'west') {\n          return playerState.position[1];\n        }\n      }\n    }\n\n    function canMove(position, direction) {\n      if (direction === 'north') {\n        return position[0] > 0;\n      } else if (direction === 'east') {\n        return position[1] < gameEnvironment.gridSize;\n      } else if (direction === 'south') {\n        return position[0] < gameEnvironment.gridSize;\n      } else if (direction === 'west') {\n        return position[1] > 0;\n      }\n    }\n\n    function attack() {\n      return 'shoot';\n    }\n\n    function moveWisely() {\n      if (playerState.ammo === 0 && params.nearestAmmo) {\n        return getAmmo(params.nearestAmmo.position);\n      } else if (playerState.ammo > 0 && params.nearestEnemy) {\n        if (params.nearestAmmo && params.nearestAmmo.distance < params.nearestEnemy.distance) {\n          return getAmmo(params.nearestAmmo.position);\n        } else {\n          return huntEnemy(params.nearestEnemy.instance);\n        }\n      } else {\n        return getSafestDirection();\n      }\n    }\n\n    function huntEnemy(enemy) {\n      if (utils.isVisible(playerState.position, enemy.position, playerState.direction)) {\n        return attack();\n      } else {\n        var attackDirection = getAttackDirection();\n        var enemyDistance = calculateEnemyDistance(playerState.position, enemy);\n\n        if (attackDirection === playerState.direction && (enemyDistance > 1 || enemy.ammo === 0)) {\n          return 'move';\n        } else {\n          return attackDirection;\n        }\n      }\n\n      function getAttackDirection() {\n        var isEnemyAligned = isAligned(playerState.position, enemy.position);\n        var enemyOrientation = ORIENTATION[enemy.direction];\n\n        if (isEnemyAligned) {\n          return utils.fastGetDirection(playerState.position, enemy.position);\n        } else {\n          if (enemyOrientation === 'vertical') {\n            return enemy.position[1] > playerState.position[1] ? 'east' : 'west';\n          } else {\n            return enemy.position[0] > playerState.position[0] ? 'south' : 'north';\n          }\n        }\n      }\n    }\n\n    function moveSafely() {\n      var destination;\n      var vulnerabilityOnMove;\n\n      if (playerState.direction === 'north') {\n        destination = [playerState.position[0] - 1, playerState.position[1]];\n      } else if (playerState.direction === 'east') {\n        destination = [playerState.position[0], playerState.position[1] + 1];\n      } else if (playerState.direction === 'south') {\n        destination = [playerState.position[0] + 1, playerState.position[1]];\n      } else if (playerState.direction === 'west') {\n        destination = [playerState.position[0], playerState.position[1] - 1];\n      }\n\n      vulnerabilityOnMove = calculateVulnerabilityLevel(destination);\n\n      if (vulnerabilityOnMove === 1.0) {\n        return null;\n      } else {\n        return 'move';\n      }\n    }\n\n    function getAmmo(ammoPosition) {\n      // Get direction to turn\n      var goToDirection = utils.fastGetDirection(playerState.position, ammoPosition);\n\n      // If same direction, move\n      if (goToDirection === playerState.direction) {\n        return moveSafely();\n      } else {\n        return goToDirection;\n      }\n    }\n\n    // Decide movement\n    if (params.vulnerabilityLevel === 1.0 || params.vulnerabilityLevel >= 0.5 && params.canKill !== true) {\n      response = defend();\n    } else if (params.canKill === true) {\n      response = attack();\n    } else {\n      response = moveWisely();\n    }\n    return response;\n\n  }\n};\n\nmodule.exports = manuelmhtr;\n","var utils = require(\"../lib/utils.js\");\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar canDie = function (player, enemies) {\n  return (\n    enemies\n      .filter((enemy) => enemy.isAlive)\n      .map((enemy) => utils.canKill(enemy, [player], enemy.direction))\n      .filter((result) => result === true).length > 0\n  );\n};\n\nvar getClosestAmmo = function (player, map) {\n  if (!map.ammoPosition.length) {\n    return;\n  }\n  var playerPos = player.position;\n  var closestAmmo = map.ammoPosition[0];\n\n  map.ammoPosition.forEach(function (pos) {\n    var isCloser = utils.getDistance(playerPos, pos) < utils.getDistance(playerPos, closestAmmo);\n    if (isCloser) {\n      closestAmmo = pos;\n    }\n  });\n\n  return closestAmmo;\n};\n\nvar shouldMoveForAmmo = function (player, map) {\n  var closest = getClosestAmmo(player, map);\n  var direction;\n\n  if (!closest) {\n    return;\n  }\n\n  direction = utils.fastGetDirection(player.position, closest);\n\n  if (direction !== player.direction) {\n    return direction;\n  }\n\n  return \"move\";\n};\n\nvar isMovementSafe = function (action, player, enemies, map) {\n  var futureState = JSON.parse(JSON.stringify(player));\n\n  if (action === \"move\") {\n    switch (player.direction) {\n      case DIRECTIONS[0]:\n        if (futureState.position[0] > 0) {\n          futureState.position[0]--;\n        }\n        break;\n      case DIRECTIONS[1]:\n        if (futureState.position[1] < map.gridSize[1]) {\n          futureState.position[1]++;\n        }\n        break;\n      case DIRECTIONS[2]:\n        if (futureState.position[0] < map.gridSize[0]) futureState.position[0]++;\n        break;\n      case DIRECTIONS[3]:\n        if (futureState[1] > 0) futureState.position[1]--;\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (canDie(futureState, enemies)) {\n    return false;\n  }\n  return true;\n};\n\nvar getSafestMove = function (player, enemies, map) {\n  var safest;\n  var isSafeHere = isMovementSafe(\"north\", player, enemies, map);\n  var isSafeToMove = isMovementSafe(\"move\", player, enemies, map);\n\n  if (isSafeHere) {\n    if (player.ammo) {\n      return turnToKill(player, enemies) || chaseEnemy(player, enemies);\n    }\n  }\n  if (isSafeToMove) {\n    return \"move\";\n  }\n\n  return;\n};\n\nvar getClosestEnemy = function (player, enemies) {\n  var clonedStates = enemies.slice(0, enemies.length);\n  var closest;\n\n  clonedStates = clonedStates.filter(function (enemy) {\n    return enemy.isAlive;\n  });\n\n  closest = clonedStates[0];\n\n  clonedStates.forEach(function (enemy) {\n    if (utils.getDistance(player, enemy) < utils.getDistance(player, closest)) {\n      closest = enemy;\n    }\n  });\n\n  return closest;\n};\n\nvar chaseEnemy = function (player, enemies) {\n  var closestEnemy = getClosestEnemy(player, enemies);\n  var direction = utils.fastGetDirection(player.position, closestEnemy.position);\n\n  if (direction !== player.direction) {\n    return direction;\n  }\n\n  return \"move\";\n};\n\nvar turnToKill = function (player, enemies) {\n  var turn = player.direction === \"north\" ? \"south\" : \"north\";\n  var mockState = JSON.parse(JSON.stringify(player));\n\n  enemies = enemies.filter(function (enemy) {\n    return enemy.isAlive;\n  });\n\n  DIRECTIONS.forEach(function (direction) {\n    mockState.direction = direction;\n\n    if (utils.canKill(mockState, enemies)) {\n      turn = direction;\n    }\n  });\n\n  return turn;\n};\n\nvar hunter = function (player, enemies, map) {\n  var turnMove;\n  var ammoMove;\n  var safestMove;\n\n  if (utils.canKill(player, enemies)) return \"shoot\";\n\n  turnMove = turnToKill(player, enemies);\n  if (turnMove && isMovementSafe(turnMove, player, enemies, map)) return turnMove;\n\n  safestMove = getSafestMove(player, enemies, map);\n  if (safestMove) return safestMove;\n\n  return \"stay\";\n};\n\nvar gatherer = function (player, enemies, map) {\n  var ammoMove;\n  var safestMove;\n\n  ammoMove = shouldMoveForAmmo(player, map);\n  if (ammoMove && isMovementSafe(ammoMove, player, enemies, map)) return ammoMove;\n\n  safestMove = getSafestMove(player, enemies, map);\n  if (safestMove) return safestMove;\n\n  return utils.safeRandomMove();\n};\n\nvar kills = 0;\n\nvar ericku_ = {\n  info: {\n    name: \"Cristine\",\n    style: {\n      type: \"cristine.svg\",\n      hue: 0\n    },\n  },\n  ai: function (player, enemies, map) {\n    if (player.ammo) return hunter(player, enemies, map);\n    if (Math.random() > 0.8) return \"move\";\n    return gatherer(player, enemies, map);\n  },\n};\n\nmodule.exports = ericku_;\n","var utils = require('../lib/utils.js');\n\nvar siegfried = {\n  info: {\n    name: 'Siegfried',\n    style: 4\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.getDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.randomMove();\n  }\n};\n\nmodule.exports = siegfried;\n","var utils = require('../lib/utils.js');\n\nvar MUSOLINI = {\n  info: {\n    name: 'Horror',\n    style: 10\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = MUSOLINI;\n","/**\r\n * Created by Roberto Alvarez on 7/29/2015.\r\n */var utils = require('../lib/utils.js'),\r\n    currentDirection = 0,\r\n    oldBestAmo = null,\r\n    directions = {\r\n        1: 'north',\r\n        2: 'east',\r\n        3: 'south',\r\n        4: 'west'\r\n    },\r\n    turnsComplete = 0,\r\n    ElPerron = {\r\n        info: {\r\n            name: 'ElPerron',\r\n            style: 7\r\n        },\r\n        ai: (playerState, enemiesStates, gameEnvironment) => {\r\n            var directionToTarget,\r\n                /**\r\n                 * Devuelve la direcci�n del amo mas cercano en base a la posici�n actual de la\r\n                 * nave\r\n                 * @returns {*}\r\n                 */\r\n                getBestAmmo = () => {\r\n                    var myPosition = playerState.position,\r\n                        distanceMin = 22,\r\n                        ammoMin = null;\r\n                    for (var amIndex in gameEnvironment.ammoPosition) {\r\n                        var ammo = gameEnvironment.ammoPosition[amIndex];\r\n                        var difXbyMe = Math.abs(myPosition[1] - ammo[1]),\r\n                            difYbyMe = Math.abs(myPosition[0] - ammo[0]),\r\n                            distanceByMe = difXbyMe + difYbyMe;\r\n\r\n                        if (distanceByMe < distanceMin) {\r\n                            distanceMin = distanceByMe;\r\n                            ammoMin = ammo;\r\n                        }\r\n                    }\r\n\r\n                    return ammoMin;\r\n                },\r\n                /**\r\n                 * Devuelve n�mero de enemigos vivos\r\n                 * @returns {number}\r\n                 */\r\n                getCountEnemiesAlive = () => {\r\n                    var countEnemies = 0;\r\n\r\n                    for (var enIndex in enemiesStates) {\r\n                        var enemy = enemiesStates[enIndex];\r\n\r\n                        if (enemy.isAlive) {\r\n                            countEnemies++;\r\n                        }\r\n                    }\r\n\r\n                    return countEnemies;\r\n                },\r\n                /**\r\n                 * Devuelve si la nave esta posicionada en el mismo lugar que el ammo\r\n                 * @param ammo\r\n                 * @returns {boolean}\r\n                 */\r\n                isOnAmmo = (ammo) => {\r\n                    if (ammo == null) {\r\n                        return false;\r\n                    }\r\n                    return ammo[0] == playerState.position[0] &&\r\n                        ammo[1] == playerState.position[1];\r\n                };\r\n\r\n            // Hasta la vista baby !!!\r\n            if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\r\n                return 'shoot';\r\n            }\r\n\r\n            if (playerState.ammo == 0 || turnsComplete == 1) {\r\n                var toPosition = getBestAmmo();\r\n\r\n                // Si tengo los suficientes disparos para eliminar a todos los enemigos\r\n                // me dirijo hacia ellos\r\n                // if (playerState.ammo >= getCountEnemiesAlive()) {\r\n                //     toPosition = enemiesStates[0].position;\r\n                // }\r\n\r\n                directionToTarget = utils.getDirection(playerState.position, toPosition);\r\n\r\n                if (isOnAmmo(oldBestAmo)) {\r\n                    turnsComplete = 0;\r\n                }\r\n\r\n                // Guardo referencia de la posicion a la que me dirigi anteriormente\r\n                oldBestAmo = toPosition;\r\n\r\n                // Si ya se movio, cambio mi direcci�n\r\n                if (directionToTarget !== playerState.direction) {\r\n                    return directionToTarget;\r\n                }\r\n\r\n                return 'move';\r\n            }\r\n            else {\r\n                // Si tiene armas lo hago girar\r\n                currentDirection++;\r\n                if (currentDirection > 4) {\r\n                    currentDirection = 1;\r\n                    turnsComplete++;\r\n                }\r\n\r\n                return directions[currentDirection];\r\n            }\r\n\r\n            return utils.randomMove();\r\n        }\r\n    };\r\n\r\nmodule.exports = ElPerron;\r\n","var utils = require(\"../lib/utils.js\");\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nvar getShortestDirection = (start, endArray) => {\n  var reducedArray = endArray.reduce(\n    (reduced, currentPosition) => {\n      if (reduced[0] === -1 || utils.getDistance(start, currentPosition) < reduced[0]) {\n        reduced[0] = utils.getDistance(start, currentPosition);\n        reduced[1] = currentPosition;\n      }\n\n      return reduced;\n    },\n    [-1, 0]\n  );\n\n  return utils.fastGetDirection(start, reducedArray[1]);\n};\n\nvar turnToKill = (originalPosition, positionArray) => {\n  return DIRECTIONS.reduce((result, currentDirection) => {\n    if (result) return result;\n    return positionArray.reduce((resultPositions, currentEnemyPosition) => {\n      if (resultPositions) return resultPositions;\n      return utils.isVisible(originalPosition, currentEnemyPosition, currentDirection) ? currentDirection : null;\n    }, null);\n  }, null);\n};\n\nvar Yuno = {\n  info: {\n    name: \"Yuno\",\n    style: 9\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n    var directionToPlayer;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) return \"shoot\";\n\n    if (playerState.ammo) {\n      directionToPlayer = turnToKill(playerState.position, enemiesStates.map(el => el.position));\n      if (directionToPlayer) {\n        return directionToPlayer;\n      }\n\n      directionToPlayer = getShortestDirection(playerState.position, enemiesStates.map(el => el.position));\n      if (directionToPlayer !== playerState.direction) return directionToPlayer;\n      return \"move\";\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = getShortestDirection(playerState.position, gameEnvironment.ammoPosition);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return \"move\";\n    }\n\n    // if (Math.random() > 0.9) return \"move\";\n\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = Yuno;\n","var utils = require('../lib/utils.js');\n\nvar xmontoya = {\n  info: {\n    name: 'Xmontoya89',\n    style: 1\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n\n    if (gameEnvironment.ammoPosition.length) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return utils.safeRandomMove();\n    }\n\n    return 'move';\n  }\n};\n\nmodule.exports = xmontoya;\n","var utils = require('../lib/utils.js');\nvar noAmmo = true;\nvar margeux = {\n  info: {\n    name: 'margeux',\n    style: {\n      type: \"cristine2.svg\",\n      hue: 0\n    },\n  },\n  ai: (playerState, enemiesStates, gameEnvironment) => {\n    var directionToAmmo;\n    var directionToEnemy;\n    if (playerState.ammo >0){\n      noAmmo = false;\n    }\n    if (playerState.ammo == 0){\n      noAmmo= true;\n    }\n\n    if (gameEnvironment.ammoPosition.length && noAmmo) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n\n    //LOOK for an enemy\n    if(!noAmmo){\n      directionToEnemy = utils.fastGetDirection(playerState.position, enemiesStates[0].position);\n      if (directionToEnemy !== playerState.direction){\n        var directionToMargeus = utils.fastGetDirection(enemiesStates[0].position, playerState.position);\n        if (directionToMargeus !== enemiesStates[0].position){\n                  return directionToEnemy;\n        }else{\n                  return utils.safeRandomMove();\n        }\n      }\n      if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n      }else{\n        return utils.safeRandomMove();\n      }\n    }\n\n\n    if (utils.canKill(playerState, enemiesStates) && playerState.ammo) {\n      return 'shoot';\n    }\n    if (gameEnvironment.ammoPosition.length ) {\n      directionToAmmo = utils.fastGetDirection(playerState.position, gameEnvironment.ammoPosition[0]);\n\n      if (directionToAmmo !== playerState.direction) return directionToAmmo;\n      return 'move';\n    }\n    return utils.safeRandomMove();\n  }\n};\n\nmodule.exports = margeux;\n","import React from \"react\";\n\nclass Tiles extends React.Component {\n  // shouldComponentUpdate() {\n  //   return false;\n  // }\n\n  render() {\n    var { gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n    var i;\n\n    var tileRender = [];\n    for (i = 0; i < gridSize * gridSize; i++) {\n      tileRender.push(\n        <div\n          style={{ height: tileSize + \"vmin\", width: tileSize + \"vmin\" }}\n          className=\"clash-tile\"\n          key={i}\n        />\n      );\n    }\n\n    return <div>{tileRender}</div>;\n  }\n}\n\nexport default Tiles;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nclass Ammos extends React.Component {\n  render() {\n    var { gridSize, ammoPosition } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var ammoRender = _.map(ammoPosition, (ammoPos, ammoIndex) => {\n      return (\n        <div\n          key={ammoIndex}\n          className=\"clash-ammo\"\n          style={{\n            top: tileSize * ammoPos[0] + \"vmin\",\n            left: tileSize * ammoPos[1] + \"vmin\",\n            width: tileSize + \"vmin\",\n            height: tileSize + \"vmin\",\n          }}\n        />\n      );\n    });\n\n    return (\n      <div style={{ zIndex: 1 }} className=\"clash-layer animation-glow\">\n        {ammoRender}\n      </div>\n    );\n  }\n}\n\nexport default Ammos;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction getSpaceArt(info) {\n  if (_.isPlainObject(info)) {\n    return `url(static/rockets/${info.type})`;\n  }\n\n  return `url(static/rockets/rocket${info}.png)`;\n}\n\nfunction PlayersRender(props) {\n  const { gridSize, playerStates, playerInstances, speed } = props;\n  const playerDirections = playerStates.map((el) => el.directionAngle);\n  const tileSize = 100 / gridSize;\n\n  const playerRender = _.map(playerStates, (playerData, playerIndex) => {\n    const playerUUID = playerData.id;\n    const playerInfo = playerInstances.find((player) => player.id === playerUUID).info;\n\n    return (\n      <div\n        key={playerUUID}\n        className=\"clash-player-container\"\n        style={{\n          transition: `transform ${speed * 2 + 16}ms`,\n          width: tileSize + \"vmin\",\n          height: tileSize + \"vmin\",\n          opacity: playerData.isAlive ? 1 : 0.5,\n          zIndex: playerData.isAlive ? 2 : 0,\n          transform: `translateY(${tileSize * playerData.position[0]}vmin) translateX(${\n            tileSize * playerData.position[1]\n          }vmin) scale(${playerData.isAlive ? 1 : 0.66})`,\n        }}>\n        <div\n          className={`clash-player -name-${playerData.name}`}\n          style={{\n            transition: `transform ${speed * 2 + 16}ms`,\n            width: 1.25 * tileSize + \"vmin\",\n            height: 1.25 * tileSize + \"vmin\",\n            left: -0.125 * tileSize + \"vmin\",\n            top: -0.125 * tileSize + \"vmin\",\n            filter: `grayscale(${playerData.isAlive ? \"0%\" : \"100%\"}) hue-rotate(${\n              playerData.style.hue || 0\n            }deg)`,\n            backgroundImage: getSpaceArt(playerData.style),\n            transform: `rotate(${\n              90 * playerDirections[playerIndex] + (playerData.isAlive ? 0 : 45)\n            }deg)`,\n          }}\n        />\n        <div\n          className=\"clash-player-name\"\n          style={{ textDecoration: playerData.isAlive ? \"none\" : \"line-through\" }}>\n          {playerInfo.name}\n          {new Array(Math.min(playerData.ammo, 3)).fill(\"🚀\").join(\"\")}\n        </div>\n      </div>\n    );\n  });\n\n  return <div className=\"clash-layer\">{playerRender}</div>;\n}\n\nexport default PlayersRender;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction Stats(props) {\n  const [expand, setExpand] = React.useState(false);\n\n  const isToggable = window.innerHeight < 1080;\n\n  const isExpanded = expand || !isToggable;\n\n  const { gameStats, rounds, total } = props;\n\n  const orderedStats = Object.keys(gameStats)\n    .map((playerId) => {\n      return { ...gameStats[playerId], id: playerId };\n    })\n    .sort((a, b) => b.score - a.score);\n\n  return (\n    <div className={`stats ${isToggable ? \"-clickable\" : \"\"}`} onClick={() => {setExpand(!expand)}}>\n      {isExpanded ? (\n        <div\n          style={{\n            textAlign: \"center\",\n            padding: \"0.25rem 0 0.5rem\",\n            color: \"#2ecc71\",\n          }}>\n          Round {rounds} of {total}\n        </div>\n      ) : (\n        <div style={{ textAlign: \"center\", padding: \"0.25rem 0 0.5rem\" }}>Click to see stats</div>\n      )}\n      {isExpanded && (\n        <table>\n          <thead>\n            <tr>\n              <th>Player</th>\n              <th style={{ padding: 0 }}></th>\n              <th alt=\"Eliminations\" style={{ textAlign: \"right\" }}>\n                E\n              </th>\n              <th alt=\"Wins\" style={{ textAlign: \"right\" }}>\n                W\n              </th>\n              <th alt=\"Score\" style={{ textAlign: \"right\" }}>\n                S\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {_.map(orderedStats, (playerStats, index) => {\n              return (\n                <tr key={index} className={`player-stats ${playerStats.isAlive ? \"\" : \"-dead\"}`}>\n                  <td className=\"player-name\">{playerStats.name}</td>\n                  <td style={{ padding: 0 }} className=\"player-dead-emoji\">\n                    <span role=\"img\" aria-label=\"dead\">\n                      💀\n                    </span>\n                  </td>\n                  <td className=\"stats-results\">{playerStats.kills}</td>\n                  <td className=\"stats-results\">{playerStats.wins}</td>\n                  <td className=\"stats-results\">{playerStats.score}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nvar DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nclass Shoots extends React.Component {\n  // shouldComponentUpdate(nextProps) {\n  //   return nextProps.shoots.length !== this.props.shoots.length;\n  // }\n\n  render() {\n    var { shoots, gridSize } = this.props;\n\n    var tileSize = 100 / gridSize;\n\n    var shootsRender = _.map(shoots, (el, index) => {\n      return (\n        <div\n          key={index}\n          className=\"clash-shoot animation-shot\"\n          style={{\n            top: tileSize * el.origin[0] + \"vmin\",\n            left: tileSize * el.origin[1] + \"vmin\",\n            transform:\n              \"translatex(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"translatey(\" +\n              tileSize / 2 +\n              \"vmin) \" +\n              \"rotate(\" +\n              (DIRECTIONS.indexOf(el.direction) - 1) * 90 +\n              \"deg) \"\n          }}\n        />\n      );\n    });\n\n    return <div className=\"clash-layer\">{shootsRender}</div>;\n  }\n}\n\nexport default Shoots;\n","import React, { useRef, useEffect } from \"react\";\n\nconst MAX_NOTIF = 7;\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nfunction Notifications(props) {\n  const [dateTime, setDateTime] = React.useState(new Date().getTime());\n  const { notifications } = props;\n\n  const filteredKeys = notifications\n    .filter((el) => el && el.text)\n    .filter((el) => dateTime < el.expire)\n    .sort((a, b) => a.date - b.date)\n    .slice(MAX_NOTIF * -1);\n\n  useInterval(() => {\n    setDateTime(new Date().getTime());\n  }, 50);\n\n  return (\n    <div className=\"notifications\">\n      {filteredKeys.map((notificationData, notificationIdx) => {\n        const hideByLength = notificationIdx <= filteredKeys.length - MAX_NOTIF;\n        const showByTime = dateTime < notificationData.expire - 500;\n        return (\n          <Notification\n            hide={hideByLength || !showByTime}\n            key={notificationData.id}\n            {...notificationData}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Notification(props) {\n  const [rendered, setRendered] = React.useState(false);\n  const { hide } = props;\n\n  useInterval(() => {\n    setRendered(true);\n  }, 16);\n\n  return (\n    <div\n      className={`notifications-element ${props.id % 2 === 0 ? \"-alt\" : \"\"} ${\n        rendered && !hide ? \"\" : \"-hide\"\n      }`}>\n      <div className=\"notifications-element-text\">{props.text}</div>\n    </div>\n  );\n}\n\nexport default Notifications;\n","import generateId from \"./../lib/string-tools\";\n\nclass PlayerClass {\n  constructor(options) {\n    this.id = generateId.generateBase32String(8);\n    this.info = options.info;\n    this.name = options.info.name;\n    this.ai = options.ai;\n  }\n\n  execute(playerState, enemyState, gameEnvironment) {\n    try {\n      return this.ai(playerState, enemyState, gameEnvironment);\n    } catch (e) {\n      console.error(\"!\", e);\n    }\n  }\n}\n\nexport default PlayerClass;\n","const _ = require(\"lodash\");\nconst utils = require(\"../lib/utils.js\");\nconst DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\n\nconst safeMovement = (value, size) => {\n  if (value < 0) return 0;\n  if (value > size - 1) return size - 1;\n  return value;\n};\n\nconst clashCoreUtils = (data) => {\n  const {\n    playerIndex,\n    playerAction,\n    playerStates,\n    playerInstances,\n    gameEnvironment,\n    evtCallback,\n    coreCallback,\n  } = data;\n  const currentPlayerState = playerStates[playerIndex];\n\n  if (DIRECTIONS.indexOf(playerAction) !== -1) {\n    const newDirection = DIRECTIONS.indexOf(playerAction);\n    const currentDirection = DIRECTIONS.indexOf(currentPlayerState.direction);\n\n    // alert(newDirection, currentPlayerState.direction)\n\n    let directionDifference = ((newDirection + 4) % 4) - ((currentDirection + 4) % 4);\n    if (directionDifference === 3) directionDifference = -1;\n    if (directionDifference === -3) directionDifference = 1;\n\n    playerStates[playerIndex].direction = playerAction;\n    playerStates[playerIndex].directionAngle =\n      playerStates[playerIndex].directionAngle + directionDifference;\n    return playerStates;\n  }\n\n  if (playerAction === \"move\") {\n    switch (currentPlayerState.direction) {\n      case DIRECTIONS[0]:\n        currentPlayerState.position[0]--;\n        break;\n      case DIRECTIONS[1]:\n        currentPlayerState.position[1]++;\n        break;\n      case DIRECTIONS[2]:\n        currentPlayerState.position[0]++;\n        break;\n      case DIRECTIONS[3]:\n        currentPlayerState.position[1]--;\n        break;\n      default:\n        break;\n    }\n\n    // prevent the player to go over the world\n    currentPlayerState.position[0] = safeMovement(\n      currentPlayerState.position[0],\n      gameEnvironment.gridSize\n    );\n    currentPlayerState.position[1] = safeMovement(\n      currentPlayerState.position[1],\n      gameEnvironment.gridSize\n    );\n\n    // check if the player collected ammo\n    gameEnvironment.ammoPosition.forEach((el, index) => {\n      if (el[0] === currentPlayerState.position[0] && el[1] === currentPlayerState.position[1]) {\n        gameEnvironment.ammoPosition.splice(index, 1);\n        currentPlayerState.ammo += 1;\n      }\n    });\n  }\n\n  if (playerAction === \"shoot\" && currentPlayerState.ammo > 0) {\n    currentPlayerState.ammo -= 1;\n\n    let kills = [];\n    let survivors = [];\n\n    evtCallback(\"SHOOT\", {\n      shooter: playerIndex,\n      origin: currentPlayerState.position,\n      direction: currentPlayerState.direction,\n    });\n\n    playerStates.forEach((enemyObject, enemyIndex) => {\n      if (\n        enemyObject.isAlive &&\n        utils.isVisible(\n          currentPlayerState.position,\n          enemyObject.position,\n          currentPlayerState.direction\n        )\n      ) {\n        kills.push(enemyIndex);\n        enemyObject.isAlive = false;\n      }\n    });\n\n    if (kills.length) {\n      survivors = _.filter(playerStates, (player) => player.isAlive);\n      coreCallback(\"KILL\", {\n        killer: playerInstances[playerIndex],\n        killed: _.map(kills, (index) => playerInstances[index]),\n      });\n      evtCallback(\"KILL\", {\n        killer: playerInstances[playerIndex],\n        killed: _.map(kills, (index) => playerInstances[index]),\n      });\n\n      if (survivors.length === 1) {\n        coreCallback(\"WIN\", {\n          winner: playerInstances[playerIndex],\n        });\n        evtCallback(\"WIN\", {\n          winner: playerInstances[playerIndex],\n        });\n      }\n    }\n  }\n\n  return playerStates;\n};\n\nexport default clashCoreUtils;\n","import _ from \"lodash\";\n\nimport PlayerClass from \"./PlayerClass.js\";\nimport executeMovementHelper from \"./executeMovementHelper.js\";\n\nimport EventEmitter from \"wolfy87-eventemitter\";\n\nconst DIRECTIONS = [\"north\", \"east\", \"south\", \"west\"];\nconst TOTAL_ROUNDS = 10;\n// const TOTAL_ROUNDS = 100;\nconst SUDDEN_DEATH_PLY = 210;\n\nconst MAP_SIZE = window.innerWidth > 720 ? 13 : 11;\n\nconst ClashEmitter = new EventEmitter();\n\nlet STATE = {\n  running: false,\n\n  currentPlayer: 0,\n\n  gameEnvironment: {\n    gridSize: MAP_SIZE,\n    ammoPosition: [],\n  },\n  suddenDeathCount: 0,\n  totalRounds: TOTAL_ROUNDS,\n  rounds: 0,\n\n  playerInstances: [],\n  playerStates: [],\n\n  playerDefinition: {},\n  gameStats: {},\n};\n\nfunction ClashJS(playerDefinitionArray) {\n  STATE.playerInstances = playerDefinitionArray.map((playerDefinition) => {\n    const player = new PlayerClass(playerDefinition);\n    STATE.gameStats[player.id] = {\n      id: player.id,\n      name: player.name,\n      kills: 0,\n      wins: 0,\n    };\n    return player;\n  });\n\n  function emit(name, payload) {\n    console.info(\"ClashCore: Emit\", { name, payload });\n    ClashEmitter.emit(\"CLASHJS\", { name, payload });\n  }\n\n  function handleExecuteMovementCallback(event, payload) {\n    emit(event, payload);\n  }\n\n  function handleCoreAction(action, data) {\n    if (action === \"KILL\") {\n      let { killer, killed } = data;\n\n      STATE.gameStats[killer.id].kills += killed.length;\n\n      _.forEach(STATE.playerInstances, (player) => {\n        let stats = STATE.gameStats[player.id];\n        if (killed.indexOf(player) > -1) {\n          STATE.alivePlayerCount--;\n          stats.deaths++;\n        }\n        if (stats.deaths) {\n          stats.kdr = stats.kills / stats.deaths;\n        } else {\n          stats.kdr = stats.kills;\n        }\n      });\n      STATE.suddenDeathCount = 0;\n    }\n    if (action === \"WIN\") {\n      STATE.gameStats[data.winner.id].wins++;\n      STATE.suddenDeathCount = 0;\n\n      if (STATE.rounds >= STATE.totalRounds) {\n        emit(\"GAME_OVER\");\n        return;\n      }\n    }\n    if (action === \"DRAW\") {\n      STATE.suddenDeathCount = 0;\n\n      if (STATE.rounds >= STATE.totalRounds) {\n        emit(\"GAME_OVER\");\n        return;\n      }\n    }\n  }\n\n  function savePlayerAction(playerIndex, playerAction) {\n    STATE.playerStates = executeMovementHelper({\n      playerIndex: playerIndex,\n      playerAction: playerAction,\n      playerStates: STATE.playerStates,\n      playerInstances: STATE.playerInstances,\n      gameEnvironment: STATE.gameEnvironment,\n      evtCallback: handleExecuteMovementCallback,\n      coreCallback: handleCoreAction,\n    });\n  }\n\n  function createAmmo() {\n    const newAmmoPosition = [\n      Math.floor(Math.random() * STATE.gameEnvironment.gridSize),\n      Math.floor(Math.random() * STATE.gameEnvironment.gridSize),\n    ];\n\n    if (\n      STATE.gameEnvironment.ammoPosition.some((el) => {\n        return el[0] === newAmmoPosition[0] && el[1] === newAmmoPosition[1];\n      })\n    ) {\n      createAmmo();\n      return;\n    }\n\n    STATE.gameEnvironment.ammoPosition.push(newAmmoPosition);\n  }\n\n  return {\n    newGame() {\n      STATE.gameEnvironment = {\n        gridSize: MAP_SIZE,\n        ammoPosition: [],\n      };\n      STATE.rounds = STATE.rounds + 1;\n      STATE.suddenDeathCount = 0;\n      STATE.playerInstances = _.shuffle(_.cloneDeep(STATE.playerInstances));\n      STATE.playerStates = STATE.playerInstances.map((playerInstance) => {\n        const gridSize = STATE.gameEnvironment.gridSize;\n        const directionAngle = Math.floor(Math.random() * 4);\n\n        return {\n          name: playerInstance.name,\n          id: playerInstance.id,\n          style: playerInstance.info.style,\n          position: [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)],\n          direction: DIRECTIONS[directionAngle],\n          directionAngle: directionAngle,\n          ammo: 0,\n          isAlive: true,\n        };\n      });\n      STATE.currentPlayer = 0;\n      STATE = { ...STATE };\n      createAmmo();\n    },\n\n    getAlivePlayerCount() {\n      return STATE.playerStates.filter((player) => player.isAlive).length;\n    },\n\n    getState() {\n      const derivedStats = STATE.gameStats;\n\n      for (const playerKey in derivedStats) {\n        const player = derivedStats[playerKey];\n        player.score = player.wins * 5 + player.kills;\n        player.isAlive = STATE.playerStates.find(\n          (playerState) => playerState.id === playerKey\n        ).isAlive;\n      }\n\n      return JSON.parse(\n        JSON.stringify({\n          gameEnvironment: STATE.gameEnvironment,\n          gameStats: derivedStats,\n          rounds: STATE.rounds,\n          totalRounds: STATE.totalRounds,\n          playerStates: STATE.playerStates,\n          playerInstances: STATE.playerInstances,\n        })\n      );\n    },\n\n    nextPly() {\n      let clonedStates = _.cloneDeep(STATE.playerStates);\n\n      STATE.suddenDeathCount++;\n\n      if (STATE.suddenDeathCount === SUDDEN_DEATH_PLY - 35) {\n        emit(\"PRE_DRAW\");\n      }\n\n      if (STATE.suddenDeathCount > SUDDEN_DEATH_PLY) {\n        emit(\"DRAW\");\n        if (STATE.rounds >= STATE.totalRounds) {\n          emit(\"GAME_OVER\");\n          return;\n        }\n      }\n\n      const otherPlayers = clonedStates.filter((currentEnemyFilter, index) => {\n        if (index === STATE.currentPlayer) return false;\n        return currentEnemyFilter.isAlive;\n      });\n\n      if (STATE.playerStates[STATE.currentPlayer].isAlive) {\n        savePlayerAction(\n          STATE.currentPlayer,\n          STATE.playerInstances[STATE.currentPlayer].execute(\n            clonedStates[STATE.currentPlayer],\n            otherPlayers,\n            _.cloneDeep(STATE.gameEnvironment)\n          )\n        );\n      }\n\n      STATE.currentPlayer = (STATE.currentPlayer + 1) % STATE.playerInstances.length;\n\n      if (\n        STATE.gameEnvironment.ammoPosition.length < STATE.playerStates.length / 1.3 &&\n        Math.random() > 0.93\n      ) {\n        createAmmo();\n      }\n\n      if (Math.random() > 0.98) {\n        createAmmo();\n      }\n\n      return this.getState();\n    },\n\n    addListener(callback) {\n      ClashEmitter.addListener(\"CLASHJS\", callback);\n    },\n  };\n}\n\nexport default ClashJS;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport Tiles from \"./Tiles.js\";\nimport Ammos from \"./Ammos.js\";\nimport PlayersRender from \"./PlayersRender.js\";\nimport Stats from \"./Stats.js\";\nimport Shoots from \"./Shoots.js\";\nimport Notifications from \"./Notifications.js\";\n\nimport ClashJS from \"../clashjs/ClashCore.js\";\n\nimport playerObjects from \"../Players.js\";\nconst playerDefinitionArray = _.shuffle(_.map(playerObjects, (el) => el));\n\nconst DEBUG = document.location.search.includes(\"debug\");\n\nconst DEFAULT_SPEED = DEBUG ? 32 : 200;\nconst MAX_SPEED = DEBUG ? 32 : 100;\n// const DEFAULT_SPEED = 4;\n// const MAX_SPEED = 4;\n\nconst EXPIRE_NOTIF_TIME = 7 * 1000;\n\nconst ClashInstance = ClashJS(playerDefinitionArray);\nClashInstance.newGame();\n\nclass Clash extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      clashState: null,\n      shoots: [],\n      speed: DEFAULT_SPEED,\n      notifications: [],\n      finished: false,\n    };\n  }\n\n  componentWillMount() {\n    ClashInstance.addListener(({ name, payload }) => {\n      if (name === \"SHOOT\") {\n        this.setState((state) => {\n          return {\n            shoots: [\n              ...state.shoots,\n              {\n                direction: payload.direction,\n                origin: payload.origin.slice(),\n                time: new Date().getTime(),\n              },\n            ],\n          };\n        });\n        return;\n      }\n\n      if (name === \"KILL\") return this.handleKill(payload);\n      if (name === \"WIN\") {\n        const winner = _.get(payload, [\"winner\", \"info\", \"name\"]);\n        if (winner) {\n          this.pushNotification({\n            text: (\n              <div style={{ color: \"#2ecc71\" }}>\n                <strong>{winner}</strong> won this one!\n              </div>\n            ),\n          });\n        }\n        this.newGame();\n        return;\n      }\n      if (name === \"DRAW\") {\n        this.pushNotification({\n          text: <strong style={{ color: \"#f39c12\" }}>We got a draw!</strong>,\n        });\n        this.newGame();\n        return;\n      }\n      if (name === \"PRE_DRAW\") {\n        this.pushNotification({\n          text: `They are too strong!`,\n        });\n      }\n      if (name === \"GAME_OVER\") return this.endGame();\n    });\n\n    this.nextTurn();\n  }\n\n  newGame() {\n    if (ClashInstance.getState().rounds >= ClashInstance.getState().totalRounds) {\n      return;\n    }\n\n    this.pushNotification({\n      text: `Starting a new game!`,\n    });\n\n    this.setState(\n      {\n        speed: DEFAULT_SPEED,\n      },\n      () => {\n        ClashInstance.newGame();\n      }\n    );\n  }\n\n  nextTurn() {\n    const { speed, finished } = this.state;\n\n    if (finished) {\n      return;\n    }\n\n    this.setState(\n      {\n        clashState: ClashInstance.nextPly(),\n        speed: this.state.speed > MAX_SPEED ? parseInt(this.state.speed * 0.98, 10) : MAX_SPEED,\n      },\n      () => {\n        const alivePlayerCount = ClashInstance.getAlivePlayerCount();\n\n        if (alivePlayerCount >= 2) {\n          window.setTimeout(() => {\n            this.nextTurn();\n          }, speed);\n        }\n      }\n    );\n  }\n\n  handleKill({ killer, killed }) {\n    this.pushNotification({\n      text: `${killer.name} eliminated ${_.map(killed, (player) => player.name).join(\",\")}`,\n    });\n  }\n\n  endGame() {\n    const clashState = ClashInstance.getState();\n\n    const winner = _.sortBy(\n      clashState.gameStats,\n      (playerStats) => playerStats.score * -1 + playerStats.wins * -0.1\n    )[0];\n\n    this.pushNotification({\n      expire: Infinity,\n      text: <b style={{ color: \"#2ecc71\", fontWeight: 600 }}>Congratulations {winner.name}!</b>,\n    });\n\n    this.pushNotification({\n      expire: Infinity,\n      text: (\n        <div>\n          <button\n            style={{\n              border: \"none\",\n              height: \"2rem\",\n              padding: \"0 1rem\",\n              fontSize: \"14px\",\n              borderRadius: \"4\",\n            }}\n            onClick={() => {\n              window.location.reload();\n            }}>\n            Start Again\n          </button>\n        </div>\n      ),\n    });\n\n    this.setState({\n      shoots: [],\n      finished: true,\n    });\n  }\n\n  pushNotification({ text, expire }) {\n    this.setState((state) => {\n      return {\n        notifications: [\n          ...state.notifications,\n          {\n            expire: expire || new Date().getTime() + EXPIRE_NOTIF_TIME,\n            date: new Date().getTime(),\n            text: text,\n            id: state.notifications.length,\n          },\n        ],\n      };\n    });\n  }\n\n  render() {\n    if (!this.state) return null;\n\n    const { shoots, speed, notifications } = this.state;\n    const {\n      gameStats,\n      playerStates,\n      playerInstances,\n      rounds,\n      totalRounds,\n      gameEnvironment,\n    } = ClashInstance.getState();\n\n    return (\n      <div className=\"clash\">\n        <Tiles gridSize={gameEnvironment.gridSize} />\n        <Shoots shoots={shoots.slice()} gridSize={gameEnvironment.gridSize} />\n        <Ammos gridSize={gameEnvironment.gridSize} ammoPosition={gameEnvironment.ammoPosition} />\n        <PlayersRender\n          speed={speed}\n          gridSize={gameEnvironment.gridSize}\n          playerInstances={playerInstances}\n          playerStates={playerStates}\n        />\n        <Notifications notifications={notifications} />\n        <Stats rounds={rounds} total={totalRounds} gameStats={gameStats} />\n        {DEBUG && (\n          <pre className=\"debugger\">\n            <b>playerInstances</b>\n            {JSON.stringify(playerInstances, 0, 2)}\n            <hr />\n            <b>playerStates</b>\n            {JSON.stringify(playerStates, 0, 2)}\n          </pre>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Clash;\n","import Clash from \"./components/ClashRender.js\";\nexport default Clash;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}